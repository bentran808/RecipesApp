// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cart Item Component should render correctly 1`] = `
<View
  collapsable={false}
  forwardedRef={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onLayout={[Function]}
  style={
    Object {
      "overflow": "hidden",
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "bottom": 0,
        "flexDirection": "row-reverse",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": Array [
          Object {
            "translateX": -10000,
          },
        ],
      }
    }
  >
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "red",
          "justifyContent": "center",
        }
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "white",
            "fontWeight": "600",
            "paddingHorizontal": 10,
            "transform": Array [
              Object {
                "scale": 0,
              },
            ],
          }
        }
      >
        Delete
      </Text>
    </RNGestureHandlerButton>
    <View
      onLayout={[Function]}
    />
  </View>
  <View
    collapsable={false}
    forwardedRef={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    pointerEvents="auto"
    style={
      Object {
        "transform": Array [
          Object {
            "translateX": -0,
          },
        ],
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "white",
          "flexDirection": "row",
          "margin": 10,
        }
      }
    >
      <View
        style={
          Object {
            "padding": 5,
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "https://www.texanerin.com/content/uploads/2019/06/nobake-chocolate-cookies-1-650x975.jpg",
            }
          }
          style={
            Object {
              "borderRadius": 5,
              "height": 75,
              "width": 75,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "padding": 10,
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 18,
            }
          }
        >
          Oatmeal Cookies
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 16,
                "fontWeight": "bold",
              }
            }
          >
            $20
          </Text>
          <View
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "flex-end",
                "borderColor": "red",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="decreaseBtn"
            >
              <View
                style={
                  Array [
                    Object {
                      "borderRadius": 100,
                      "marginHorizontal": 10,
                    },
                    Object {},
                    undefined,
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "red",
                        "fontSize": 20,
                        "fontWeight": "normal",
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  -
                </Text>
              </View>
            </View>
            <Text
              style={
                Object {
                  "color": "red",
                }
              }
            >
              1
            </Text>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="increaseBtn"
            >
              <View
                style={
                  Array [
                    Object {
                      "borderRadius": 100,
                      "marginHorizontal": 10,
                    },
                    Object {},
                    undefined,
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "red",
                        "fontSize": 20,
                        "fontWeight": "normal",
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  +
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
