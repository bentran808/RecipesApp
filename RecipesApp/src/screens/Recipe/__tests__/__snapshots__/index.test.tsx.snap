// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Recipe Screen should render correctly 1`] = `
Array [
  <RCTScrollView
    collapsable={false}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onScroll={[Function]}
    scrollEventThrottle={16}
    showsVerticalScrollIndicator={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "minHeight": 250,
          }
        }
      >
        <RCTScrollView
          activeAnimationOptions={null}
          activeAnimationType="timing"
          activeSlideAlignment="center"
          activeSlideOffset={20}
          apparitionDelay={0}
          automaticallyAdjustContentInsets={false}
          autoplay={true}
          autoplayDelay={500}
          autoplayInterval={3000}
          callbackOffsetMargin={5}
          containerCustomStyle={Object {}}
          contentContainerCustomStyle={Object {}}
          contentContainerStyle={
            Array [
              Object {
                "paddingLeft": 0,
                "paddingRight": 0,
              },
              Object {},
            ]
          }
          data={
            Array [
              "https://www.texanerin.com/content/uploads/2019/06/nobake-chocolate-cookies-1-650x975.jpg",
              "https://namelymarly.com/wp-content/uploads/2018/04/20180415_Beet_Lasagna_10.jpg",
              "https://advancelocal-adapter-image-uploads.s3.amazonaws.com/image.al.com/home/bama-media/width600/img/news_impact/photo/burger-fijpg-57e7e5907630c2ad.jpg",
              "https://img.thedailybeast.com/image/upload/c_crop,d_placeholder_euli9k,h_1439,w_2560,x_0,y_0/dpr_1.5/c_limit,w_1044/fl_lossy,q_auto/v1492718105/articles/2013/09/24/burger-king-s-new-french-fries-took-ten-years-to-develop/130923-gross-burger-tease_izz59e",
              "https://aht.seriouseats.com/images/2012/02/20120221-193971-fast-food-fries-Burger-King-fries-2.jpg",
            ]
          }
          decelerationRate="fast"
          directionalLockEnabled={true}
          disableVirtualization={false}
          enableMomentum={false}
          enableSnap={true}
          firstItem={0}
          forwardedRef={[Function]}
          getItem={[Function]}
          getItemCount={[Function]}
          hasParallaxImages={false}
          horizontal={true}
          inactiveSlideOpacity={1}
          inactiveSlideScale={1}
          inactiveSlideShift={0}
          initialNumToRender={6}
          invertStickyHeaders={false}
          inverted={false}
          itemWidth={750}
          keyExtractor={[Function]}
          layout="default"
          lockScrollTimeoutDuration={1000}
          lockScrollWhileSnapping={false}
          loop={false}
          loopClonesPerSide={3}
          maxToRenderPerBatch={13}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onResponderRelease={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          onSnapToItem={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
          overScrollMode="never"
          pinchGestureEnabled={false}
          removeClippedSubviews={true}
          renderItem={[Function]}
          scrollEnabled={true}
          scrollEventThrottle={1}
          scrollsToTop={false}
          shouldOptimizeUpdates={true}
          showsHorizontalScrollIndicator={false}
          showsVerticalScrollIndicator={false}
          slideStyle={Object {}}
          sliderWidth={750}
          stickyHeaderIndices={Array []}
          style={
            Object {
              "flexDirection": "row",
              "opacity": 0,
              "width": 750,
            }
          }
          swipeThreshold={20}
          updateCellsBatchingPeriod={50}
          useScrollView={false}
          vertical={false}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={13}
        >
          <View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  null,
                ]
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Array [
                    Object {
                      "width": 750,
                    },
                    Object {},
                    Object {},
                  ]
                }
              >
                <RNGestureHandlerButton
                  collapsable={false}
                  exclusive={true}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                >
                  <View
                    accessible={true}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "height": 250,
                          "justifyContent": "center",
                          "width": 750,
                        }
                      }
                    >
                      <Image
                        source={
                          Object {
                            "uri": "https://www.texanerin.com/content/uploads/2019/06/nobake-chocolate-cookies-1-650x975.jpg",
                          }
                        }
                        style={
                          Object {
                            "height": 250,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                  </View>
                </RNGestureHandlerButton>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  null,
                ]
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Array [
                    Object {
                      "width": 750,
                    },
                    Object {},
                    Object {},
                  ]
                }
              >
                <RNGestureHandlerButton
                  collapsable={false}
                  exclusive={true}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                >
                  <View
                    accessible={true}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "height": 250,
                          "justifyContent": "center",
                          "width": 750,
                        }
                      }
                    >
                      <Image
                        source={
                          Object {
                            "uri": "https://namelymarly.com/wp-content/uploads/2018/04/20180415_Beet_Lasagna_10.jpg",
                          }
                        }
                        style={
                          Object {
                            "height": 250,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                  </View>
                </RNGestureHandlerButton>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  null,
                ]
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Array [
                    Object {
                      "width": 750,
                    },
                    Object {},
                    Object {},
                  ]
                }
              >
                <RNGestureHandlerButton
                  collapsable={false}
                  exclusive={true}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                >
                  <View
                    accessible={true}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "height": 250,
                          "justifyContent": "center",
                          "width": 750,
                        }
                      }
                    >
                      <Image
                        source={
                          Object {
                            "uri": "https://advancelocal-adapter-image-uploads.s3.amazonaws.com/image.al.com/home/bama-media/width600/img/news_impact/photo/burger-fijpg-57e7e5907630c2ad.jpg",
                          }
                        }
                        style={
                          Object {
                            "height": 250,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                  </View>
                </RNGestureHandlerButton>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  null,
                ]
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Array [
                    Object {
                      "width": 750,
                    },
                    Object {},
                    Object {},
                  ]
                }
              >
                <RNGestureHandlerButton
                  collapsable={false}
                  exclusive={true}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                >
                  <View
                    accessible={true}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "height": 250,
                          "justifyContent": "center",
                          "width": 750,
                        }
                      }
                    >
                      <Image
                        source={
                          Object {
                            "uri": "https://img.thedailybeast.com/image/upload/c_crop,d_placeholder_euli9k,h_1439,w_2560,x_0,y_0/dpr_1.5/c_limit,w_1044/fl_lossy,q_auto/v1492718105/articles/2013/09/24/burger-king-s-new-french-fries-took-ten-years-to-develop/130923-gross-burger-tease_izz59e",
                          }
                        }
                        style={
                          Object {
                            "height": 250,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                  </View>
                </RNGestureHandlerButton>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  null,
                ]
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Array [
                    Object {
                      "width": 750,
                    },
                    Object {},
                    Object {},
                  ]
                }
              >
                <RNGestureHandlerButton
                  collapsable={false}
                  exclusive={true}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                >
                  <View
                    accessible={true}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "height": 250,
                          "justifyContent": "center",
                          "width": 750,
                        }
                      }
                    >
                      <Image
                        source={
                          Object {
                            "uri": "https://aht.seriouseats.com/images/2012/02/20120221-193971-fast-food-fries-Burger-King-fries-2.jpg",
                          }
                        }
                        style={
                          Object {
                            "height": 250,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                  </View>
                </RNGestureHandlerButton>
              </View>
            </View>
          </View>
        </RCTScrollView>
        <View
          accessible={false}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "paddingHorizontal": 20,
                "paddingVertical": 30,
              },
              Object {
                "flexDirection": "row",
              },
              Object {
                "alignSelf": "center",
                "bottom": 0,
                "flex": 1,
                "paddingVertical": 10,
                "position": "absolute",
              },
            ]
          }
        >
          <View
            accessible={false}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginHorizontal": 8,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "rgba(255, 255, 255, 1)",
                  "borderRadius": 4,
                  "height": 8,
                  "opacity": 0.4,
                  "transform": Array [
                    Object {
                      "scale": 0.6,
                    },
                  ],
                  "width": 8,
                }
              }
            />
          </View>
          <View
            accessible={false}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginHorizontal": 8,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "rgba(255, 255, 255, 1)",
                  "borderRadius": 4,
                  "height": 8,
                  "opacity": 0.4,
                  "transform": Array [
                    Object {
                      "scale": 0.6,
                    },
                  ],
                  "width": 8,
                }
              }
            />
          </View>
          <View
            accessible={false}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginHorizontal": 8,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "rgba(255, 255, 255, 1)",
                  "borderRadius": 4,
                  "height": 8,
                  "opacity": 0.4,
                  "transform": Array [
                    Object {
                      "scale": 0.6,
                    },
                  ],
                  "width": 8,
                }
              }
            />
          </View>
          <View
            accessible={false}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginHorizontal": 8,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "rgba(255, 255, 255, 1)",
                  "borderRadius": 4,
                  "height": 8,
                  "opacity": 0.4,
                  "transform": Array [
                    Object {
                      "scale": 0.6,
                    },
                  ],
                  "width": 8,
                }
              }
            />
          </View>
          <View
            accessible={false}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginHorizontal": 8,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "rgba(255, 255, 255, 1)",
                  "borderRadius": 4,
                  "height": 8,
                  "opacity": 0.4,
                  "transform": Array [
                    Object {
                      "scale": 0.6,
                    },
                  ],
                  "width": 8,
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "margin": 25,
            "marginTop": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "black",
              "fontSize": 28,
              "fontWeight": "bold",
              "margin": 10,
              "textAlign": "center",
            }
          }
        >
          Oatmeal Cookies
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="categoryBtn"
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 100,
                  "marginHorizontal": 10,
                },
                Object {},
                Object {
                  "margin": 10,
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#2cd18a",
                    "fontSize": 14,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  },
                ]
              }
            >
              COOKIES
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <Image
            source={1}
            style={
              Object {
                "height": 20,
                "marginRight": 0,
                "width": 20,
              }
            }
          />
          <Text
            style={
              Object {
                "fontSize": 14,
                "fontWeight": "bold",
                "marginLeft": 5,
              }
            }
          >
            15
             minutes 
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "flex-start",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="viewIngredientsBtn"
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 100,
                    "marginHorizontal": 10,
                  },
                  Object {
                    "borderColor": "#2cd18a",
                    "borderWidth": 1,
                    "paddingHorizontal": 60,
                    "paddingVertical": 10,
                  },
                  Object {
                    "marginTop": 20,
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#2cd18a",
                      "fontSize": 14,
                      "fontWeight": "normal",
                      "textAlign": "center",
                    },
                  ]
                }
              >
                View Ingredients
              </Text>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "fontSize": 16,
              "margin": 15,
              "marginTop": 30,
              "textAlign": "left",
            }
          }
        >
          -- Start with cleaned and peeled russet potatoes that you have cut into 3/8-inch match sticks. Place in bowl of very cold water: keep rinsing and changing the water until the water is clear; drain thoroughly and dry with paper towels or a clean lint-free kitchen towel.

 -- Meanwhile, you preheat your hot oil to 350 degrees F. Place prepared taters in oil and cook about 5 minutes. They will have that blond-tone color to them. 

 -- Note: Once you add cold potatoes to the hot oil, the temperature of your oil is going to drop - you want it to be somewhere between 330 - 325 degrees F. 

 -- Remove from oil; drain and cool. Now - either refrigerate until ready to finish cooking, or cool completely and freeze up to 3 months. To freeze properly - place completely cooled fries in single layer on tray and place in freezer until frozen. Then bag them.

 -- To finish cooking - preheat your oil to 400* F. Add your cold fries (which will drop the oil temp - which is fine because you want it near the 375 degrees F. temp) and cook a few minutes until done. Lightly salt them and shake well so that the salt distributes well and they are not salty.
        </Text>
      </View>
    </View>
  </RCTScrollView>,
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "white",
        "bottom": 0,
        "flexDirection": "row",
        "height": 40,
        "justifyContent": "space-around",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "borderColor": "#2cd18a",
          "borderRadius": 75,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-around",
          "marginHorizontal": 10,
          "width": 150,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="decreaseBtn"
      >
        <View
          style={
            Array [
              Object {
                "borderRadius": 100,
                "marginHorizontal": 10,
              },
              Object {},
              undefined,
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#2cd18a",
                  "fontSize": 30,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
              ]
            }
          >
            -
          </Text>
        </View>
      </View>
      <Text>
        2
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="increaseBtn"
      >
        <View
          style={
            Array [
              Object {
                "borderRadius": 100,
                "marginHorizontal": 10,
              },
              Object {},
              undefined,
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#2cd18a",
                  "fontSize": 30,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
              ]
            }
          >
            +
          </Text>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="addToCartBtn"
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 100,
              "marginHorizontal": 10,
            },
            Object {
              "backgroundColor": "#2cd18a",
              "paddingHorizontal": 60,
              "paddingVertical": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "white",
                "fontSize": 14,
                "fontWeight": "normal",
                "textAlign": "center",
              },
            ]
          }
        >
          Add to cart
        </Text>
      </View>
    </View>
  </View>,
]
`;
